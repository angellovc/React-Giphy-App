{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","providers/getGifs.js","hooks/useFetchGifs.js","components/GifGrid.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","undefined","trim","length","categories","includes","onChange","target","value","type","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","console","log","json","data","gifs","map","img","images","downsized_medium","push","useFetchGifs","loading","state","setState","useEffect","then","GifGrid","image","GitExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2LAsCeA,EAnCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAqBvC,OACE,sBAAMC,SAnBc,SAACC,GACrBA,EAAMC,sBACaC,IAAfL,GAEOA,EAAWM,OAAOC,OAAS,IACpCT,GAAc,SAACU,GACb,OAAwC,IAApCA,EAAWC,SAAST,GAChB,CAAEA,GAAR,mBAAuBQ,IAEhB,YAAIA,MAGfP,EAAc,MAOhB,SACE,uBACES,SAtBoB,SAACP,GAAD,OAAWF,EAAcE,EAAMQ,OAAOC,QAuB1DC,KAAK,OACLD,MAAOZ,O,QCjBAc,EATK,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAC/B,OACE,sBAAKC,UAAU,+CAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,wBCWKK,EAlBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEA,mCACRN,EAHQ,uDAEA,mCAFA,cAGyDO,UAAUF,GAHnE,sBAIKG,MAAMR,GAJX,cAIRS,EAJQ,OAKdC,QAAQC,IAAIF,GALE,SAMOA,EAAKG,OANZ,uBAMPC,EANO,EAMPA,KAQS,KAPVC,EAAOD,EAAKE,KAAI,SAAAC,GACpB,MAAO,CACLlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAKgB,EAAIC,OAAOC,iBAAiBlB,SAGhCV,QAAgBwB,EAAKK,KAAK,aAdjB,kBAePL,GAfO,4CAAH,sDCoBEM,EAhBM,SAACf,GAAc,IAAD,EACPvB,mBAAS,CACjC+B,KAAM,GACNQ,SAAS,IAHsB,mBAC1BC,EAD0B,KACnBC,EADmB,KAajC,OAPAC,qBAAU,WACRpB,EAAQC,GACPoB,MAAK,SAAAR,GAAM,OAAIM,EAAS,CACvBV,KAAMI,EACNI,SAAS,SAEV,CAAEhB,IACEiB,GCOMI,EArBC,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,EACEe,EAAaf,GAAjCY,EADkB,EACvBJ,KAAcQ,EADS,EACTA,QACrB,OACE,sBAAKpB,UAAU,YAAf,UACA,oBAAIA,UAAU,oCAAd,SAAmDI,IAC9CgB,GAAW,2CAEG,KAAbhB,GAAiC,cAAdY,EAAO,IAAwB,0CACrC,cAAdA,EAAO,WAA6BA,EAAO,GAG1CA,EAAOF,KAAI,SAACY,GAAD,OACT,cAAC,EAAD,eAEMA,GADCA,EAAM7B,WCaV8B,EAzBM,WAAM,MAIW9C,mBAAS,CAAC,KAJrB,mBAIlBS,EAJkB,KAINV,EAJM,KAOzB,OACE,eAAC,WAAD,WACE,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEIU,EAAWwB,KAAI,SAACV,GAAD,OACb,cAAC,EAAD,CAEEA,SAAUA,GADLA,YCfnBwB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.db573c06.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n  const [inputValue, setInputValue] = useState('');\n  const handlerInputValue = (event) => setInputValue(event.target.value);\n  const handlerSubmit = (event) => {\n    event.preventDefault();\n    if (inputValue === undefined) {\n      return;\n    } else if (inputValue.trim().length > 1) {\n      setCategories((categories) => {\n        if (categories.includes(inputValue) === false) {\n          return [inputValue, ...categories];\n        } else {\n          return [...categories];\n        }\n      });\n      setInputValue('');\n    }\n  }\n  \n\n\n  return (\n    <form onSubmit={handlerSubmit}>\n      <input\n        onChange={handlerInputValue}\n        type=\"text\"\n        value={inputValue}\n      />\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\nexport default AddCategory\n","import React from 'react'\nimport '../index.css';\n\nconst GifGridItem = ({id, title, url}) => {\n  return (\n    <div className=\"card-image animate__animated animate__fadeIn\">\n      <img src={url} alt={title}></img>\n      <p>{title}</p>\n    </div>\n  )\n}\n\nexport default GifGridItem\n","const getGifs = async (category) => {\n  \n  const token = 'EG1iabfx12D4JmR49YxH7q4ft3Yc9mdf';\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${token}&q=${encodeURI(category)}&limit=10`;\n  const resp = await fetch(url);\n  console.log(resp);\n  const {data} = await resp.json();\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images.downsized_medium.url,\n    }\n  });\n  gifs.length === 0 && gifs.push('Not Found');\n  return gifs;\n}\n\nexport default getGifs;","import { useState, useEffect } from \"react\";\nimport getGifs from \"../providers/getGifs\";\n\n\nconst useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category)\n    .then(images => setState({\n      data: images,\n      loading: false,\n    }));\n  }, [ category ]);\n  return state;\n}\n\nexport default useFetchGifs;","import GifGridItem from './GifGridItem';\nimport useFetchGifs from '../hooks/useFetchGifs';\n\nconst GifGrid = ({category}) => {\n  const {data:images , loading} = useFetchGifs(category);\n  return (\n    <div className=\"card-grid\">\n    <h2 className=\"animate__animated animate__fadeIn\">{category}</h2>\n        {loading && <p>Loading...</p>}\n\n        {(category !== '' && images[0] === 'Not Found') &&  <p>Not Found</p>}\n        {images[0] === 'Not Found' && delete images[0]} \n\n        {\n          images.map((image) => (\n            <GifGridItem\n              key={image.id}\n              {...image}\n          />))\n        }\n    </div>\n  );\n}\n\nexport default GifGrid\n","import React, {Fragment, useState} from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GitExpertApp = () => {\n\n  // const categories = ['Dragon Ball', 'Samurai X', 'Shaman King']\n\n  const [categories, setCategories] = useState(['']);\n  // const handleAdd = () => setCategories([...categories, 'Hunter X Hunter']);\n\n  return (\n    <Fragment>\n      <h2>Gif Expert App</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ul>\n        {\n          categories.map((category) => (\n            <GifGrid\n              key={category}\n              category={category}\n            />))\n        }\n      </ul>\n    </Fragment>\n  );\n}\n\nexport default GitExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GitExpertApp from './GitExpertApp';\n\nReactDOM.render(\n    <GitExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}